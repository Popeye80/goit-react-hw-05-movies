{"version":3,"file":"static/js/142.924862aa.chunk.js","mappings":"kMA0CA,UAtCoB,WAClB,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,IARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GACJJ,EAAWI,EAAIC,KAAKC,YAErBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACZ,IAECG,EAIL,OACE,8BACE,0BACE,wBACGA,EAAQY,OAAS,EAChBZ,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,OAOb","sources":["components/FilmDetails/FilmReviews.jsx"],"sourcesContent":["import { fetchGetReviews } from 'Api/FetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst FilmReviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchGetReviews(moviesId)\n      .then(res => {\n        setReviews(res.data.results);\n      })\n      .catch(error => console.log(error));\n  }, [moviesId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <section>\n      <div>\n        <ul>\n          {reviews.length > 1 ? (\n            reviews.map(({ id, author, content }) => {\n              return (\n                <li key={id}>\n                  <b>{author}</b>\n                  <p>{content}</p>\n                </li>\n              );\n            })\n          ) : (\n            <p>We don't have any reviews for this movie</p>\n          )}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default FilmReviews;\n"],"names":["moviesId","useParams","useState","reviews","setReviews","useEffect","fetchGetReviews","then","res","data","results","catch","error","console","log","length","map","id","author","content"],"sourceRoot":""}